public class GameStateComponent : Xna.GameComponent, IGameStateComponent
    # InputOrder : DisplayLayer
    + GameStateComponent  (GameState state, DisplayLayer inputOrder)
    + state : GameState
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual
    + Index : int

public interface IGameStateComponent : Xna.IGameComponent
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Index : int

public class Camera : GameStateComponent
    - World : World
    + WorldMatrix : Matrix
    + ViewMatrix : Matrix
    + ProjectionMatrix : Matrix
    + DefaultPosition : Vector3
    + Position : Vector3
    + Target : Vector3
    + UpVector : Vector3
    - foV : float
    + FoV : float
    + RotationAngle : Angles3
    - AutoRotation : Angles3
    - aspectRatio : float
    - nearPlane : float
    - farPlane : float
    + Camera  (GameState state, World world)
    + Update  (GameTime gameTime) override
    - UpdateRotation  (GameTime gameTime)
    - UpdateMatrices  (GameTime gameTime)
    + TargetDistance : float
    + TargetDirection : Vector3
    + GetMouseRay (Vector2 mouse) : Ray
    + ArcballTarget : Vector3

public class ClickHandler : GameStateComponent
    + ClickHandler  (GameState state)
    private class ClickEventComponent : 
        + receiver : IMouseEventListener
        + layer : int
        + relativePosition : Vector2
    + Update  (GameTime gameTime) override

public abstract class Input : GameStateComponent, IKeyEventListener
    # FullscreenToggled : bool static
    + PreviousKeyboardState : KeyboardState static
    + PreviousMouseState : MouseState static
    - LeftButtonClickTimer : double static
    - RightButtonClickTimer : double static
    - PreviousClickMouseState : MouseState static
    + LeftButton : ClickState static
    + RightButton : ClickState static
    + GrabMouseMovement : bool
    + CurrentInputAction : InputAction
    + WASDMode : WASDMode
    + Input  (GameState state)
    + Update  (GameTime gameTime) override
    # UpdateKeys  (GameTime gameTime) virtual
    # UpdateMouse  (GameTime gameTime) virtual
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + ValidKeys : List<Keys>
    + IsKeyEventEnabled : bool
    + MouseState : MouseState static
    + KeyboardState : KeyboardState static

public class MenuScreenInput : Input
    + MenuScreenInput  (GameState state)

public class KeyHandler : GameStateComponent
    + KeyHandler  (GameState state)
    private class KeyEventComponent : 
        + receiver : IKeyEventListener
        + layer : int
        + keyEvent : KeyEvent
        + keys : List<Keys>
    + Update  (GameTime gameTime) override

public class MousePicker : GameStateComponent
    - World : World
    - lastRayCheck : double
    + MousePicker  (GameState state, World world)
    + Update  (GameTime gameTime) override
    + UpdateMouseRay  (GameTime gameTime)

public class PipeColoring : GameStateComponent, IKeyEventListener
    + Knot : Knot
    + PipeColoring  (GameState state)
    + Update  (GameTime gameTime) override
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + ValidKeys : List<Keys>
    + IsKeyEventEnabled : bool

