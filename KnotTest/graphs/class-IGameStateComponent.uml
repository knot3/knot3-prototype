public interface IGameStateComponent : Xna.IGameComponent
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Index : int

public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
    + DrawableGameStateComponent  (GameState state, DisplayLayer drawOrder)
    + state : GameState
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual
    + Index : int

public class MousePointer : DrawableGameStateComponent
    - spriteBatch : SpriteBatch
    + MousePointer  (GameState state)
    + Draw  (GameTime gameTime) override
    - DrawCursor  (GameTime gameTime)

public class Overlay : DrawableGameStateComponent
    - spriteBatch : SpriteBatch
    - effect : BasicEffect
    - World : World
    - font : SpriteFont
    + Overlay  (GameState state, World world)
    # LoadContent  () override
    + Draw  (GameTime gameTime) override
    + Update  (GameTime gameTime) override
    - DrawCoordinates  (GameTime gameTime)
    - DrawOverlay  (GameTime gameTime)
    - DrawVectorCoordinates  (Vector3 vector, int width2, int width3, int width4, int height)
    - DrawString  (string str, int width, int height, Color color)
    - DrawString  (float n, int width, int height, Color color)
    - _total_frames : int
    - _elapsed_time : float
    - _fps : int
    - UpdateFPS  (GameTime gameTime)
    - DrawFPS  (GameTime gameTime)

public class World : DrawableGameStateComponent, IEnumerable<IGameObject>
    - knotRenderEffects : List<RenderEffect>
    - knotRenderEffect : RenderEffect
    + Objects : List<IGameObject>
    + SelectedObject : IGameObject
    + Camera : Camera
    - floor : TexturedRectangle
    + World  (GameState state)
    + SelectObject  (IGameObject obj, GameTime gameTime)
    + SelectedObjectDistance () : float
    + Add  (IGameObject obj)
    + Initialize  () override
    + Draw  (GameTime gameTime) override
    + Update  (GameTime gameTime) override
    + GetEnumerator () : IEnumerator<IGameObject>
    - IEnumerable.GetEnumerator () : IEnumerator
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override

public abstract class Widget : DrawableGameStateComponent
    + Info : WidgetInfo
    + IsVisible : bool virtual
    + Widget  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + bounds () : Rectangle

public class ColorPicker : Widget, IMouseEventListener
    - colors : List<Color>
    - tiles : List<Vector2>
    - Vector2 tileSize : readonly static
    + SelectedColor : Color
    + OnSelectColor : Action<Color>
    # spriteBatch : SpriteBatch
    + ColorPicker  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + Draw  (GameTime gameTime) override
    - CreateColors (int num) : IEnumerable<Color> static
    - CreateTiles (IEnumerable<Color> _colors) : IEnumerable<Vector2> static
    - SelectColor  (Color color)
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    + SetHovered  (bool hovered)
    + IsMouseEventEnabled : bool

public abstract class Dialog : Widget
    + buttons : Menu
    + Done : Action
    # spriteBatch : SpriteBatch
    + Dialog  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    # RelativeButtonPosition (int n) : Vector2
    # RelativeButtonSize (int n) : Vector2
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    + Draw  (GameTime gameTime) override
    # DrawDialog  (GameTime gameTime) abstract
    - ButtonBackgroundColor (ItemState itemState) : Color
    - ButtonForegroundColor (ItemState itemState) : Color

public class ConfirmDialog : Dialog
    # Text : string[]
    # OnYesClick : Action
    # OnNoClick : Action
    # OnCancelClick : Action
    + ConfirmDialog  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    # DrawDialog  (GameTime gameTime) override

public class TextInputDialog : ConfirmDialog
    # TextInput : TextInput
    + TextInputDialog  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    # TextInputPosition () : Vector2
    # TextInputSize () : Vector2

public class KnotSaveConfirmDialog : TextInputDialog
    + KnotSaveConfirmDialog  (GameState state, WidgetInfo info, DisplayLayer drawOrder, Knot knot)

public class Menu : Widget
    + Vector2> RelativeItemSize : Func<int,
    + Vector2> RelativeItemPosition : Func<int,
    + Color> ItemForegroundColor : Func<ItemState,
    + Color> ItemBackgroundColor : Func<ItemState,
    + ItemAlignX : HAlign?
    + ItemAlignY : VAlign?
    # Items : List<MenuItem>
    + Menu  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    - assignMenuItemInfo  (ref MenuItemInfo info, int num, MenuItem item)
    + AddButton (MenuItemInfo info) : MenuButton virtual
    + AddDropDown  (MenuItemInfo info, DropDownMenuItem[] items, DropDownMenuItem defaultItem) virtual
    + AddDropDown  (MenuItemInfo info, DistinctOptionInfo option) virtual
    - ItemDisplayLayer : DisplayLayer
    + this [int i] : MenuItem
    + Count : int
    + Clear  ()
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    + CollapseMenus  (MenuItem menu)
    - isVisible : bool
    + IsVisible : bool override

public class VerticalMenu : Menu
    + Border : Border
    # spriteBatch : SpriteBatch
    + VerticalMenu  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + AddButton (MenuItemInfo info) : MenuButton override
    + AddDropDown  (MenuItemInfo info, DropDownMenuItem[] items, DropDownMenuItem defaultItem) override
    + AddDropDown  (MenuItemInfo info, DistinctOptionInfo option) override
    + Align  (Viewport viewport, float scale, Vector2? givenPosition = null, Vector2? givenItemSize = null, float padding = 0.15f)
    + Align  (Viewport viewport, float scale, int posX, int posY, int? sizeX = null, int? sizeY = null, float padding = 0.15f)
    + Draw  (GameTime gameTime) override

public class TextInput : Widget, IKeyEventListener
    + InputText : string
    - font : SpriteFont
    # spriteBatch : SpriteBatch
    + TextInput  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + Update  (GameTime gameTime) override
    + Draw  (GameTime gameTime) override
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + ValidKeys : List<Keys>
    + IsKeyEventEnabled : bool

public abstract class ItemWidget : Widget
    # ItemNum : int
    + ItemState : ItemState
    + ItemWidget  (GameState state, WidgetInfo info, DisplayLayer drawOrder, int itemNum)

public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
    + Info : MenuItemInfo new
    # spriteBatch : SpriteBatch
    + MenuItem  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    + Draw  (GameTime gameTime) override
    + TextPosition (SpriteFont font) : Vector2
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    + MinimumSize (SpriteFont font) : Vector2
    + ValidKeys : List<Keys>
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + SetHovered  (bool hovered)
    + IsKeyEventEnabled : bool
    + IsMouseEventEnabled : bool
    + Collapse  () virtual

public class DropDownMenu : MenuItem
    - dropdown : VerticalMenu
    - selected : MenuButton
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    + AddEntries  (DistinctOptionInfo option)
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    + Collapse  () override
    + Draw  (GameTime gameTime) override
    - ValuePosition (int dummy = 0) : Vector2
    - ValueSize (int dummy = 0) : Vector2
    - DropDownBackgroundColor (ItemState itemState) : Color
    - DropDownForegroundColor (ItemState itemState) : Color

public class MenuButton : MenuItem
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

public class GameStateComponent : Xna.GameComponent, IGameStateComponent
    # InputOrder : DisplayLayer
    + GameStateComponent  (GameState state, DisplayLayer inputOrder)
    + state : GameState
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual
    + Index : int

public class Camera : GameStateComponent
    - World : World
    + WorldMatrix : Matrix
    + ViewMatrix : Matrix
    + ProjectionMatrix : Matrix
    + DefaultPosition : Vector3
    + Position : Vector3
    + Target : Vector3
    + UpVector : Vector3
    - foV : float
    + FoV : float
    + RotationAngle : Angles3
    - AutoRotation : Angles3
    - aspectRatio : float
    - nearPlane : float
    - farPlane : float
    + Camera  (GameState state, World world)
    + Update  (GameTime gameTime) override
    - UpdateRotation  (GameTime gameTime)
    - UpdateMatrices  (GameTime gameTime)
    + TargetDistance : float
    + TargetDirection : Vector3
    + GetMouseRay (Vector2 mouse) : Ray
    + ArcballTarget : Vector3

public class ClickHandler : GameStateComponent
    + ClickHandler  (GameState state)
    private class ClickEventComponent : 
        + receiver : IMouseEventListener
        + layer : int
        + relativePosition : Vector2
    + Update  (GameTime gameTime) override

public abstract class Input : GameStateComponent, IKeyEventListener
    # FullscreenToggled : bool static
    + PreviousKeyboardState : KeyboardState static
    + PreviousMouseState : MouseState static
    - LeftButtonClickTimer : double static
    - RightButtonClickTimer : double static
    - PreviousClickMouseState : MouseState static
    + LeftButton : ClickState static
    + RightButton : ClickState static
    + GrabMouseMovement : bool
    + CurrentInputAction : InputAction
    + WASDMode : WASDMode
    + Input  (GameState state)
    + Update  (GameTime gameTime) override
    # UpdateKeys  (GameTime gameTime) virtual
    # UpdateMouse  (GameTime gameTime) virtual
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + ValidKeys : List<Keys>
    + IsKeyEventEnabled : bool
    + MouseState : MouseState static
    + KeyboardState : KeyboardState static

public class MenuScreenInput : Input
    + MenuScreenInput  (GameState state)

public class KeyHandler : GameStateComponent
    + KeyHandler  (GameState state)
    private class KeyEventComponent : 
        + receiver : IKeyEventListener
        + layer : int
        + keyEvent : KeyEvent
        + keys : List<Keys>
    + Update  (GameTime gameTime) override

public class MousePicker : GameStateComponent
    - World : World
    - lastRayCheck : double
    + MousePicker  (GameState state, World world)
    + Update  (GameTime gameTime) override
    + UpdateMouseRay  (GameTime gameTime)

public class PipeColoring : GameStateComponent, IKeyEventListener
    + Knot : Knot
    + PipeColoring  (GameState state)
    + Update  (GameTime gameTime) override
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + ValidKeys : List<Keys>
    + IsKeyEventEnabled : bool

