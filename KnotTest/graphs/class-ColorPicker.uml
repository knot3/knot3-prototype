public class ColorPicker : Widget, IMouseEventListener
    - colors : List<Color>
    - tiles : List<Vector2>
    - Vector2 tileSize : readonly static
    + SelectedColor : Color
    + OnSelectColor : Action<Color>
    # spriteBatch : SpriteBatch
    + ColorPicker  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + Draw  (GameTime gameTime) override
    - CreateColors (int num) : IEnumerable<Color> static
    - CreateTiles (IEnumerable<Color> _colors) : IEnumerable<Vector2> static
    - SelectColor  (Color color)
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    + SetHovered  (bool hovered)
    + IsMouseEventEnabled : bool

public interface IMouseEventListener : 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    + SetHovered  (bool hovered)
    + bounds () : Rectangle
    + Index : int
    + IsMouseEventEnabled : bool

public abstract class Widget : DrawableGameStateComponent
    + Info : WidgetInfo
    + IsVisible : bool virtual
    + Widget  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    + bounds () : Rectangle

public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
    + DrawableGameStateComponent  (GameState state, DisplayLayer drawOrder)
    + state : GameState
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual
    + Index : int

public interface IGameStateComponent : Xna.IGameComponent
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Index : int

