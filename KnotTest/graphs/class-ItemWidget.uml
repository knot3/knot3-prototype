// 
public abstract class ItemWidget : Widget
  Attributes:
    // 
    + ItemState : ItemState
    // 
    # ItemNum : int
  Methods:
    // 
    + ItemWidget  (GameState state, WidgetInfo info, DisplayLayer drawOrder, int itemNum)

// 
public abstract class Widget : DrawableGameStateComponent
  Attributes:
    // 
    + Info : WidgetInfo
    // 
    + IsVisible : bool virtual
  Methods:
    // 
    + Widget  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    // 
    + bounds () : Rectangle

// 
public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
  Attributes:
    // 
    + state : GameState
    // 
    - _index : DisplayLayer
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + DrawableGameStateComponent  (GameState state, DisplayLayer index)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual

// 
public interface IGameStateComponent : Xna.IGameComponent
  Attributes:
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>

// 
public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
  Attributes:
    // 
    + Index : DisplayLayer
    // 
    - _index : DisplayLayer
    // 
    + state : GameState
  Methods:
    // 
    + DrawableGameStateComponent  (GameState state, DisplayLayer index)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual

// 
public interface IGameStateComponent : Xna.IGameComponent
  Attributes:
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>

// 
public abstract class Widget : DrawableGameStateComponent
  Attributes:
    // 
    + Info : WidgetInfo
    // 
    + IsVisible : bool virtual
  Methods:
    // 
    + bounds () : Rectangle
    // 
    + Widget  (GameState state, WidgetInfo info, DisplayLayer drawOrder)

// 
public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
  Attributes:
    // 
    + state : GameState
    // 
    - _index : DisplayLayer
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + DrawableGameStateComponent  (GameState state, DisplayLayer index)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual

// 
public interface IGameStateComponent : Xna.IGameComponent
  Attributes:
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>

// 
public abstract class DrawableGameStateComponent : Xna.DrawableGameComponent, IGameStateComponent
  Attributes:
    // 
    + Index : DisplayLayer
    // 
    - _index : DisplayLayer
    // 
    + state : GameState
  Methods:
    // 
    + DrawableGameStateComponent  (GameState state, DisplayLayer index)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> virtual

// 
public interface IGameStateComponent : Xna.IGameComponent
  Attributes:
    // 
    + Index : DisplayLayer
  Methods:
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    + Info : MenuItemInfo new
    // 
    # spriteBatch : SpriteBatch
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + IsMouseEventEnabled : bool
  Methods:
    // 
    + MenuItem  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + Draw  (GameTime gameTime) override
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + SetHovered  (bool hovered)
    // 
    + Collapse  () virtual

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime gameTime) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    // 
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    // 
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Collapse ()
    // 
    + Draw  (GameTime gameTime)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    # spriteBatch : SpriteBatch
    // 
    + IsMouseEventEnabled : bool
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + Info : MenuItemInfo
  Methods:
    // 
    + MenuItem  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    + Collapse () virtual
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + Draw  (GameTime gameTime)
    // 
    + SetHovered  (bool hovered)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime gameTime) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    // 
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    // 
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Collapse ()
    // 
    + Draw  (GameTime gameTime)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

