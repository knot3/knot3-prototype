// 
public interface IKeyEventListener : 
  Attributes:
    // 
    + ValidKeys : List<Keys>
    // 
    + Index : DisplayLayer
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)

// 
public abstract class Input : GameStateComponent, IKeyEventListener
  Attributes:
    // 
    # FullscreenToggled : bool static
    // 
    + PreviousKeyboardState : KeyboardState static
    // 
    + PreviousMouseState : MouseState static
    // 
    - LeftButtonClickTimer : double static
    // 
    - RightButtonClickTimer : double static
    // 
    - PreviousClickMouseState : MouseState static
    // 
    + LeftButton : ClickState static
    // 
    + RightButton : ClickState static
    // 
    + GrabMouseMovement : bool
    // 
    + CurrentInputAction : InputAction
    // 
    + WASDMode : WASDMode
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + MouseState : MouseState static
    // 
    + KeyboardState : KeyboardState static
  Methods:
    // 
    + Input  (GameState state)
    // 
    + Update  (GameTime gameTime) override
    // 
    # UpdateKeys  (GameTime gameTime) virtual
    // 
    # UpdateMouse  (GameTime gameTime) virtual
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)

// 
public class MenuScreenInput : Input
  Attributes:
  Methods:
    // 
    + MenuScreenInput  (GameState state)

// 
public class MenuScreenInput : Input
  Attributes:
  Methods:
    // 
    + MenuScreenInput  (GameState state)

// 
public class PipeColoring : GameStateComponent, IKeyEventListener
  Attributes:
    // 
    + Knot : Knot
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + PipeColoring  (GameState state)
    // 
    + Update  (GameTime gameTime) override
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    + Info : MenuItemInfo new
    // 
    # spriteBatch : SpriteBatch
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + IsMouseEventEnabled : bool
  Methods:
    // 
    + MenuItem  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + Draw  (GameTime gameTime) override
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + SetHovered  (bool hovered)
    // 
    + Collapse  () virtual

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime gameTime) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    // 
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    // 
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Collapse ()
    // 
    + Draw  (GameTime gameTime)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class TextInput : Widget, IKeyEventListener
  Attributes:
    // 
    + InputText : string
    // 
    - font : SpriteFont
    // 
    # spriteBatch : SpriteBatch
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + TextInput  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    // 
    + Update  (GameTime gameTime) override
    // 
    + Draw  (GameTime gameTime) override
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)

// 
public abstract class Input : GameStateComponent, IKeyEventListener
  Attributes:
    // 
    - PreviousClickMouseState : MouseState static
    // 
    - LeftButtonClickTimer : double static
    // 
    - RightButtonClickTimer : double static
    // 
    + GrabMouseMovement : bool
    // 
    + LeftButton : ClickState static
    // 
    + RightButton : ClickState static
    // 
    + PreviousKeyboardState : KeyboardState static
    // 
    + MouseState : MouseState static
    // 
    + PreviousMouseState : MouseState static
    // 
    # FullscreenToggled : bool static
    // 
    + CurrentInputAction : InputAction
    // 
    + ValidKeys : List<Keys>
    // 
    + WASDMode : WASDMode
    // 
    + IsKeyEventEnabled : bool
    // 
    + KeyboardState : KeyboardState static
  Methods:
    // 
    # UpdateMouse  (GameTime gameTime) virtual
    // 
    + Update  (GameTime gameTime)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    # UpdateKeys  (GameTime gameTime) virtual
    // 
    + Input  (GameState state)

// 
public class MenuScreenInput : Input
  Attributes:
  Methods:
    // 
    + MenuScreenInput  (GameState state)

// 
public class MenuScreenInput : Input
  Attributes:
  Methods:
    // 
    + MenuScreenInput  (GameState state)

// 
public class PipeColoring : GameStateComponent, IKeyEventListener
  Attributes:
    // 
    + ValidKeys : List<Keys>
    // 
    + Knot : Knot
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + PipeColoring  (GameState state)
    // 
    + Update  (GameTime gameTime)

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    # spriteBatch : SpriteBatch
    // 
    + IsMouseEventEnabled : bool
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + Info : MenuItemInfo
  Methods:
    // 
    + MenuItem  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    + Collapse () virtual
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime gameTime)
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + Draw  (GameTime gameTime)
    // 
    + SetHovered  (bool hovered)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime gameTime) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    // 
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    // 
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime gameTime) : IEnumerable<IGameStateComponent>
    + Collapse ()
    // 
    + Draw  (GameTime gameTime)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameState state, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class TextInput : Widget, IKeyEventListener
  Attributes:
    // 
    - font : SpriteFont
    // 
    # spriteBatch : SpriteBatch
    // 
    + IsKeyEventEnabled : bool
    // 
    + ValidKeys : List<Keys>
    // 
    + InputText : string
  Methods:
    // 
    + TextInput  (GameState state, WidgetInfo info, DisplayLayer drawOrder)
    // 
    + Draw  (GameTime gameTime)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    // 
    + Update  (GameTime gameTime)

