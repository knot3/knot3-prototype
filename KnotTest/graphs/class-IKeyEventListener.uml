// 
public interface IKeyEventListener : 
  Attributes:
    // 
    + ValidKeys : List<Keys>
    // 
    + Index : DisplayLayer
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)

// 
public class KnotInputHandler : GameScreenComponent, IKeyEventListener
  Attributes:
    // 
    - World : World
    // 
    - camera : Camera
    // 
    - wasdSpeed : int
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + KnotInputHandler  (GameScreen screen, World world)
    // 
    # UpdateKeys  (GameTime time)
    // 
    + Update  (GameTime time) override
    // 
    # UpdateMouse  (GameTime time)
    // 
    - ResetMousePosition  ()
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)

// 
public class EdgeColoring : GameScreenComponent, IKeyEventListener
  Attributes:
    // 
    + Knot : Knot
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + EdgeColoring  (GameScreen screen)
    // 
    + Update  (GameTime time) override
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    + Info : MenuItemInfo new
    // 
    # spriteBatch : SpriteBatch
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + IsMouseEventEnabled : bool
  Methods:
    // 
    + MenuItem  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + Draw  (GameTime time) override
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime time)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime time)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)
    // 
    + SetHovered  (bool hovered)
    // 
    + Collapse  () virtual

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime time) : IEnumerable<IGameScreenComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime time) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime time) : IEnumerable<IGameScreenComponent>
    + Collapse ()
    // 
    + Draw  (GameTime time)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class TextInput : Widget, IKeyEventListener
  Attributes:
    // 
    + InputText : string
    // 
    - font : SpriteFont
    // 
    # spriteBatch : SpriteBatch
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + TextInput  (GameScreen screen, WidgetInfo info, DisplayLayer drawOrder)
    // 
    + Update  (GameTime time) override
    // 
    + Draw  (GameTime time) override
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)

public abstract class Input : GameStateComponent, IKeyEventListener
  Attributes:
    - PreviousClickMouseState : MouseState static
    - LeftButtonClickTimer : double static
    - RightButtonClickTimer : double static
    + GrabMouseMovement : bool
    + LeftButton : ClickState static
    + RightButton : ClickState static
    + PreviousKeyboardState : KeyboardState static
    + MouseState : MouseState static
    + PreviousMouseState : MouseState static
    # FullscreenToggled : bool static
    + CurrentInputAction : InputAction
    + ValidKeys : List<Keys>
    + WASDMode : WASDMode
    + IsKeyEventEnabled : bool
    + KeyboardState : KeyboardState static
  Methods:
    # UpdateMouse  (GameTime gameTime) virtual
    + Update  (GameTime gameTime)
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    # UpdateKeys  (GameTime gameTime) virtual
    + Input  (GameState state)

public class MenuScreenInput : Input
  Attributes:
  Methods:
    + MenuScreenInput  (GameState state)

// 
public class KnotInputHandler : GameScreenComponent, IKeyEventListener
  Attributes:
    // 
    - wasdSpeed : int
    // 
    - camera : Camera
    // 
    - World : World
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    # UpdateMouse  (GameTime time)
    // 
    + KnotInputHandler  (GameScreen screen, World world)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)
    - ResetMousePosition ()
    // 
    # UpdateKeys  (GameTime time)
    // 
    + Update  (GameTime time)

// 
public class EdgeColoring : GameScreenComponent, IKeyEventListener
  Attributes:
    // 
    + ValidKeys : List<Keys>
    // 
    + Knot : Knot
    // 
    + IsKeyEventEnabled : bool
  Methods:
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)
    // 
    + EdgeColoring  (GameScreen screen)
    // 
    + Update  (GameTime time)

public class PipeColoring : GameScreenComponent, IKeyEventListener
  Attributes:
    + ValidKeys : List<Keys>
    + Knot : Knot
    + IsKeyEventEnabled : bool
  Methods:
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime gameTime)
    + PipeColoring  (GameScreen screen)
    + Update  (GameTime gameTime)

// 
public abstract class MenuItem : ItemWidget, IMouseEventListener, IKeyEventListener
  Attributes:
    // 
    # spriteBatch : SpriteBatch
    // 
    + IsMouseEventEnabled : bool
    // 
    + ValidKeys : List<Keys>
    // 
    + IsKeyEventEnabled : bool
    // 
    + Info : MenuItemInfo
  Methods:
    // 
    + MenuItem  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    + Collapse () virtual
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)
    // 
    + OnLeftClick  (Vector2 position, ClickState click, GameTime time)
    // 
    + OnRightClick  (Vector2 position, ClickState click, GameTime time)
    // 
    + MinimumSize (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font) : Vector2
    // 
    + TextPosition (SpriteFont font, Vector2 scale) : Vector2
    // 
    + Draw  (GameTime time)
    // 
    + SetHovered  (bool hovered)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - dropdown : VerticalMenu
    // 
    - selected : MenuButton
  Methods:
    // 
    + DropDownMenu  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + SubComponents (GameTime time) : IEnumerable<IGameScreenComponent> override
    // 
    + Collapse  () override
    // 
    + Draw  (GameTime time) override
    // 
    - ValuePosition (int dummy = 0) : Vector2
    // 
    - ValueSize (int dummy = 0) : Vector2
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class DropDownMenu : MenuItem
  Attributes:
    // 
    - selected : MenuButton
    // 
    - dropdown : VerticalMenu
  Methods:
    - ValuePosition (int dummy) : Vector2
    // 
    + DropDownMenu  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)
    // 
    - DropDownBackgroundColor (ItemState itemState) : Color
    // 
    - DropDownForegroundColor (ItemState itemState) : Color
    - ValueSize (int dummy) : Vector2
    // 
    + SubComponents (GameTime time) : IEnumerable<IGameScreenComponent>
    + Collapse ()
    // 
    + Draw  (GameTime time)
    // 
    + AddEntries  (DistinctOptionInfo option)
    // 
    + AddEntries  (DropDownMenuItem[] entries, DropDownMenuItem defaultEntry)

// 
public class MenuButton : MenuItem
  Attributes:
  Methods:
    // 
    + MenuButton  (GameScreen screen, DisplayLayer drawOrder, int itemNum, MenuItemInfo info)

// 
public class TextInput : Widget, IKeyEventListener
  Attributes:
    // 
    - font : SpriteFont
    // 
    # spriteBatch : SpriteBatch
    // 
    + IsKeyEventEnabled : bool
    // 
    + ValidKeys : List<Keys>
    // 
    + InputText : string
  Methods:
    // 
    + TextInput  (GameScreen screen, WidgetInfo info, DisplayLayer drawOrder)
    // 
    + Draw  (GameTime time)
    // 
    + OnKeyEvent  (List<Keys> key, KeyEvent keyEvent, GameTime time)
    // 
    + Update  (GameTime time)

